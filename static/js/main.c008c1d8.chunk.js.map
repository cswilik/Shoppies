{"version":3,"sources":["Components/Header.js","Components/SearchBar.js","Components/MovieItem.js","Components/MoviesList.js","Components/NomItem.js","Components/Nominations.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","SearchBar","setMovies","useState","search","setSearch","useEffect","fetch","process","then","r","json","data","undefined","handleData","Search","type","placeholder","value","onChange","event","target","MovieItem","movie","addNom","noms","nominated","find","n","imdbID","src","Poster","alt","Title","Year","length","disabled","onClick","e","preventDefault","handleClick","MoviesList","movies","movieElements","map","item","NomItem","nom","deleteNom","Nominations","nominationElements","App","setNoms","addedNom","localStorage","setItem","JSON","stringify","getItem","parse","alert","handleSubmit","role","aria-label","deletedNom","filteredNoms","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c008c1d8.chunk.js","sourcesContent":["import React from 'react' \n\nfunction Header() {\n   return (<div className=\"header-div\">\n   <h1 className=\"title-text\">The Shoppies</h1>\n   <p className=\"title-sub-text\">Welcome to The Shoppies!<br></br> Search for your favorite movies and nominate them to win an award!</p>\n   </div>\n   )\n}\n\nexport default Header;","import  React, {useState, useEffect} from 'react' \n\n\n\nfunction SearchBar({setMovies}) {\n    let [search, setSearch] = useState(\"\")\n    \n\n    useEffect(() => {\n        fetch(`https://www.omdbapi.com/?apikey=${process.env.REACT_APP_API_KEY}&s=${search}&type=movie`)\n            .then(r => r.json())\n            .then(data => handleData(data.Search))\n    }, [search])\n\n\n    \n    function handleData(data) {\n        if (data === undefined) {\n            return null\n        } else {\n       setMovies(data)  \n    }\n}\n\n\n    return (\n        <div className=\"searchbar-div\">\n            <label className=\"text\">Search Your Favorite Films </label>\n            <input className=\"input-bar\" type=\"text\" placeholder=\"Search Film Title\" value={search} onChange={(event) => setSearch(event.target.value)}></input>\n        </div>\n    )\n\n}\n\nexport default SearchBar;","import React from 'react'\n\n\nfunction MovieItem({movie, addNom, noms}) {\n    \n    function handleClick(e) {\n        e.preventDefault()\n        addNom(movie)\n    }\n\n    const nominated = noms.find(n => n.imdbID === movie.imdbID)\n\n    return (<div className=\"movie-item-div\"> \n        <img className=\"movie-img\" src={movie.Poster} alt=\"movie poster\"/>\n        <h5 className=\"movie-title\">{movie.Title} ({movie.Year})</h5>\n        {(nominated || noms.length >= 5) ? <button disabled>Nominate</button> : <button className=\"button\" onClick ={(e) =>{handleClick(e)}} >Nominate</button> }\n        \n    </div>)\n}\n\nexport default MovieItem;","import React from 'react'\nimport MovieItem from './MovieItem';\n\n\nfunction MoviesList({movies, addNom, noms}) {\n\n\nlet movieElements = movies.map(item => {\n    return (<MovieItem key={item.imdbID}  movie={item} addNom={addNom} noms={noms}/>)\n})\n\n\n    return (<div className=\"movies-div\">\n        \n        {movieElements}\n        </div>)\n}\n\nexport default MoviesList;","import React from 'react'\n\nfunction NomItem({nom, deleteNom}) {\n    return (<div className=\"movie-item-div\">\n        <img className=\"movie-img\" src={nom.Poster} alt='movie poster'/>\n        <h6 className=\"text\">{nom.Title} ({nom.Year})</h6>\n        <button className=\"button\" onClick = {() => deleteNom(nom.imdbID)}>Remove Nomination</button>\n    </div>)\n}\n\nexport default NomItem;","import React from 'react' \nimport NomItem from './NomItem'\n\nfunction Nominations({noms, deleteNom}) {\n    \n    const nominationElements= noms.map(nom => {  \n       return  <NomItem key={nom.imdbID} nom={nom} deleteNom={deleteNom} />\n\n    })\n   \n   \n    return (\n        <div className='nom-div'>\n            {nominationElements}\n        </div>\n    )\n}\n\nexport default Nominations;","import React, {useEffect, useState} from 'react'\nimport Header from './Components/Header'\nimport SearchBar from './Components/SearchBar'\nimport MoviesList from './Components/MoviesList'\nimport Nominations from './Components/Nominations'\n\n\n\nfunction App() {\n  let [movies, setMovies] = useState([])\n  let [noms, setNoms] = useState([])\n  \n  \n useEffect(() => {\n   let data = localStorage.getItem(\"nominations\")\n   if (data) {\n   setNoms(JSON.parse(data))\n   }\n  }, [])\n\n \n\n  function addNom(addedNom) {\n   setNoms([...noms,addedNom ])\n  localStorage.setItem(\"nominations\", JSON.stringify([...noms, addedNom]))\n  }\n\n\n  function deleteNom(deletedNom) {\n    const filteredNoms = noms.filter(n => {\n     return (n.imdbID !== deletedNom)\n    })\n    setNoms(filteredNoms)\n    localStorage.setItem(\"nominations\", JSON.stringify(filteredNoms))\n  }\n\n\n function handleSubmit(e) {\n   e.preventDefault()\n    alert('Thank you for submitting! Please stay tuned for The Shoppies Awards Ceremony in the near future!' )\n    setNoms([])\n }\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <SearchBar setMovies={setMovies}/>\n      <h3 className=\"curly-text-right\">Your Nominations:</h3>\n      <h3 className=\"curly-text\">Select Your Nominations:</h3>\n      {noms.length >= 5 ? <div className=\"submit-div\">\n                <p>You cannot have more than 5 nominations! Please submit when you're ready!</p>\n                <button className=\"button\" onClick={(e) => handleSubmit(e)}>Submit</button>\n        </div> : null}\n      {movies.length > 0 ? <MoviesList movies={movies} addNom={addNom} noms={noms} /> : \n        <div className=\"start-div\">\n          <span role=\"img\" aria-label=\"sheep\" className=\"emoji\">üèÜ</span>\n          Begin by searching your favorite films!\n          <span role=\"img\" aria-label=\"sheep\" >üèÜ</span>\n        </div> }\n      {noms.length > 0 ? <Nominations noms={noms} addNom={addNom} deleteNom={deleteNom}/> : null}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}