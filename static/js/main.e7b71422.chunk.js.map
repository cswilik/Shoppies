{"version":3,"sources":["Header.js","SearchBar.js","MovieItem.js","MoviesList.js","NomItem.js","Nominations.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","SearchBar","setMovies","movies","useState","search","setSearch","useEffect","fetch","process","then","r","json","data","undefined","searchedMovies","map","item","isNominated","handleData","Search","type","placeholder","value","onChange","event","target","MovieItem","movie","addNom","nominated","deleteNom","src","Poster","alt","Title","Year","length","disabled","onClick","imdbID","MoviesList","movieElements","NomItem","nom","Nominations","noms","nominationElements","App","updatedMovies","mov","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7b71422.chunk.js","sourcesContent":["import React from 'react' \n\nfunction Header() {\n   return (<div className=\"header-div\">\n   <h1 className=\"title-text\">The Shoppies</h1>\n   <p className=\"title-sub-text\">Welcome to The Shoppies!<br></br> Search for your favorite movies and nominate them to win an award!</p>\n   </div>\n   )\n}\n\nexport default Header;","import  React, {useState, useEffect} from 'react' \n\n\nfunction SearchBar({setMovies, movies}) {\n    let [search, setSearch] = useState(\"\")\n    \n\n    useEffect(() => {\n        fetch(`http://www.omdbapi.com/?apikey=${process.env.REACT_APP_API_KEY}&s=${search}`)\n        .then(r => r.json())\n        .then(data => handleData(data.Search)\n        )}, [search])\n    \n    function handleData(data) {\n        if (data === undefined) {\n            return null\n        } else {\n        let searchedMovies = data.map(item => {\n            return {...item, isNominated: false}\n        })\n        setMovies(searchedMovies)\n    }}\n\n\n    return (\n        <div className=\"searchbar-div\">\n            <label className=\"text\">Search Your Favorite Films </label>\n            <input className=\"input-bar\" type=\"text\" placeholder=\"Search Film Title\" value={search} onChange={(event) => setSearch(event.target.value)}></input>\n            \n        </div>\n\n    )\n}\n\nexport default SearchBar;","import React from 'react'\n\nfunction MovieItem({movie, addNom, nominated, deleteNom}) {\n    \n    \n\n    return (<div className=\"movie-item-div\"> \n        <img className=\"movie-img\" src={movie.Poster} alt=\"movie poster\"/>\n        <h5 className=\"movie-title\">{movie.Title} ({movie.Year})</h5>\n        {movie.isNominated || nominated.length >= 5 ? <button disabled>Nominated</button> :<button className=\"button\" onClick ={() => addNom(movie.imdbID)} >Nominate</button> }\n        \n    </div>)\n}\n\nexport default MovieItem;","import React from 'react'\nimport MovieItem from './MovieItem';\n\n\nfunction MoviesList({movies, addNom, nominated}) {\n\n\nlet movieElements = movies.map(item => {\n    return (<MovieItem key={item.imdbID}  movie={item} addNom={addNom} nominated={nominated}/>)\n})\n\n\n    return (<div className=\"movies-div\">\n        {movieElements}\n        </div>)\n}\n\nexport default MoviesList;","import React from 'react'\n\nfunction NomItem({nom, addNom}) {\n    return (<div className=\"movie-item-div\">\n        <img className=\"movie-img\" src={nom.Poster} alt='movie poster'/>\n        <h6 className=\"text\">{nom.Title} ({nom.Year})</h6>\n        <button className=\"button\" onClick = {() => addNom(nom.imdbID)}>Remove Nomination</button>\n    </div>)\n}\n\nexport default NomItem;","import React from 'react' \n// import MovieItem from './MovieItem';\nimport NomItem from './NomItem';\n\nfunction Nominations({noms, addNom}) {\n\n    const nominationElements= noms.map(nom => {\n       return  <NomItem key={nom.imdbID} nom={nom} addNom={addNom}/>\n    })\n   \n   \n\n\n    return (\n        <div className='nom-div'>\n            {nominationElements}\n        </div>\n    )\n}\n\nexport default Nominations;","import React, {useState} from 'react'\nimport Header from './Header'\nimport SearchBar from './SearchBar'\nimport MoviesList from './MoviesList'\nimport Nominations from './Nominations'\n// console.log(process.env.REACT_APP_API_KEY)\n\n\nfunction App() {\n  let [movies, setMovies] = useState([])\n  \n\n  function addNom(noms) {\n    const updatedMovies = movies.map(mov => {\n      if (noms === mov.imdbID) {\n        return mov.isNominated ? {...mov, isNominated: false} : {...mov, isNominated: true}\n        }\n      return mov\n    })\n    setMovies(updatedMovies)\n\n  }\n\n\n\n\n  \n  const nominated = movies.filter(mov => {\n      return mov.isNominated === true\n    })\n   \n  \n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <SearchBar setMovies={setMovies} movies={movies}/>\n      <h3 className=\"curly-text-right\">Your Nominations:</h3>\n      <h3 className=\"curly-text\">Select Your Nominations:</h3>\n      {movies ? <MoviesList movies={movies} addNom={addNom} nominated={nominated} /> : null}\n      \n       {nominated.length > 0 ? <Nominations noms={nominated} addNom={addNom}/> : null}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}